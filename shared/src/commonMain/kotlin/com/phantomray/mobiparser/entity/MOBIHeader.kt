package com.phantomray.mobiparser.entity

import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

@Serializable
data class MOBIHeader(
    @SerialName("identifier") val identifier: String,
    @SerialName("headerLength") val headerLength: UInt,
    @SerialName("mobiType") val mobiType: Int,
    @SerialName("textEncoding") val textEncoding: Int,
    @SerialName("uniqueID") val uniqueID: UInt,
    @SerialName("fileVersion") val fileVersion: UInt,
    @SerialName("orthographicIndex") val orthographicIndex: Int,
    @SerialName("inflectionIndex") val inflectionIndex: Int,
    @SerialName("indexNames") val indexNames: Int,
    @SerialName("indexKeys") val indexKeys: Int,
    @SerialName("extraIndex0") val extraIndex0: Int,
    @SerialName("extraIndex1") val extraIndex1: Int,
    @SerialName("extraIndex2") val extraIndex2: Int,
    @SerialName("extraIndex3") val extraIndex3: Int,
    @SerialName("extraIndex4") val extraIndex4: Int,
    @SerialName("extraIndex5") val extraIndex5: Int,
    @SerialName("firstNonBookIndex") val firstNonBookIndex: Int,
    @SerialName("fullNameOffset") val fullNameOffset: Int,
    @SerialName("fullNameLength") val fullNameLength: Int,
    @SerialName("locale") val locale: Int,
    @SerialName("inputLanguage") val inputLanguage: Int,
    @SerialName("outputLanguage") val outputLanguage: Int,
    @SerialName("minVersion") val minVersion: Int,
    @SerialName("firstImageIndex") val firstImageIndex: Int,
    @SerialName("huffmanRecordOffset") val huffmanRecordOffset: Int,
    @SerialName("huffmanRecordCount") val huffmanRecordCount: Int,
    @SerialName("huffmanTableOffset") val huffmanTableOffset: Int,
    @SerialName("huffmanTableLength") val huffmanTableLength: Int,
    @SerialName("EXTHFlags") val EXTHFlags: Int,
    @SerialName("unknown0") val unknown0: String,
    @SerialName("unknown1") val unknown1: Int,
    @SerialName("DRMOffset") val DRMOffset: Int,
    @SerialName("DRMCount") val DRMCount: Int,
    @SerialName("DRMSize") val DRMSize: Int,
    @SerialName("DRMFlags") val DRMFlags: Int,
    @SerialName("unknown2") val unknown2: Long,
    @SerialName("firstContentRecordNumber") val firstContentRecordNumber: UShort,
    @SerialName("lastContentRecordNumber") val lastContentRecordNumber: UShort,
    @SerialName("unknown3") val unknown3: Int,
    @SerialName("FCISRecordNumber") val FCISRecordNumber: Int,
    @SerialName("FCISRecordCount") val FCISRecordCount: Int,
    @SerialName("FLISRecordNumber") val FLISRecordNumber: Int,
    @SerialName("FLISRecordCount") val FLISRecordCount: Int,
    @SerialName("unknown4") val unknown4: Long,
    @SerialName("unknown5") val unknown5: Int,
    @SerialName("fistDataCompilationDataSectionCount") val fistDataCompilationDataSectionCount: Int,
    @SerialName("numberOfDataCompilationDataSections") val numberOfDataCompilationDataSections: Int,
    @SerialName("unknown6") val unknown6: Int,
    @SerialName("extraRecordDataFlags") val extraRecordDataFlags: Int,
    @SerialName("INDXRecordOffset") val INDXRecordOffset: Int,
)
